var searchIndex = {};
searchIndex["fsort"] = {"doc":"fsort is a crate to sort files in a fast, OS-independent and &quot;rusty&quot; way.","items":[[3,"File","fsort","A file which could be sorted according to a specific criterion.",null,null],[12,"path","","The path to the file in the local filesystem.",0,null],[4,"Order","","The order of the sorting algorithm.",null,null],[13,"Ascending","","The order should be sorted in ascending order.",1,null],[13,"Descending","","The order should be sorted in descending order.",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"new","","Creates a new sortable file from a path.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"from","std::path","",2,{"inputs":[{"name":"file"}],"output":{"name":"pathbuf"}}],[11,"clone","fsort","",1,null],[0,"file_collection","","This modules contains the sorted `FileCollection`s and their iterators.",null,null],[3,"StaticCollection","fsort::file_collection","A sorted collection of files with fixed criterion.",null,null],[3,"DynamicCollection","","A sorted collection of files with changeable criterion.",null,null],[3,"PathIter","","An iterator over the sorted paths of a FileCollection.",null,null],[3,"FileIter","","An iterator over the files in a `FileCollection` according to the requested order.",null,null],[4,"ErrorBehavior","","This enum describes the behavior of a sorting algorithm in case of errors while adding files.",null,null],[13,"Ignore","","Ignore the error and continue adding.",3,null],[13,"Abort","","Abort the execution and stop adding files.",3,null],[4,"Result","","The enum describes the result of a file adding operation.",null,null],[13,"InvalidStartingPoint","","The given path is not a valid directory.",4,null],[13,"Success","","The operation was successful and the files was added.",4,null],[13,"FileError","","While some files was added correctly there occurs several error during operation.",4,null],[11,"new","","Creates a new sorted collection with a specific criterion.\n# Examples\n```\nuse fsort::criterion::FileName;\nuse fsort::file_collection::DynamicCollection;",5,{"inputs":[],"output":{"name":"dynamiccollection"}}],[11,"set_criterion","","Changes the sorting criterion.\n# Examples\n```\nuse std::fs::File;\nuse std::path::PathBuf;\nuse fsort::criterion::{FileName, FileSize};\nuse fsort::file_collection::{FileCollection, DynamicCollection};",5,null],[11,"add_file","","",5,null],[11,"add_directory","","",5,null],[11,"set_order","","",5,null],[11,"get_order","","",5,null],[11,"path_iter","","",5,null],[11,"into_iter","","",5,null],[11,"new","","Creates a new sorted collection with a specific criterion.\n# Examples\n```\nuse fsort::criterion::FileName;\nuse fsort::file_collection::StaticCollection;",6,{"inputs":[],"output":{"name":"staticcollection"}}],[11,"iter","","Returns an iterator over the sorted files in the collection according to the criterion.\n# Examples\n```\nuse std::fs::File;\nuse std::path::PathBuf;\nuse fsort::criterion::FileName;\nuse fsort::file_collection::StaticCollection;\nuse fsort::file_collection::FileCollection;",6,null],[11,"add_file","","",6,null],[11,"add_directory","","",6,null],[11,"set_order","","",6,null],[11,"get_order","","",6,null],[11,"path_iter","","",6,null],[11,"into_iter","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"staticcollection"}}],[11,"new","","Creates a new iterator from a StaticCollection",7,{"inputs":[{"name":"staticcollection"}],"output":{"name":"pathiter"}}],[11,"next","","",7,null],[11,"next_back","","",7,null],[11,"len","","",7,null],[11,"next","","",8,null],[11,"next_back","","",8,null],[11,"len","","",8,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[8,"FileCollection","","A trait for objects which are sorted collections of files.",null,null],[10,"add_file","","Adds a file to the collection.\n# Examples\nSee `DynamicCollection::set_criterion`",9,null],[10,"add_directory","","Adds all files of a directory to the collection.",9,null],[10,"get_order","","Returns the current order of the collection.",9,null],[10,"set_order","","Sets the current order of the collection.",9,null],[10,"path_iter","","Returns an iterator about all the (sorted) paths in the collection according to the order.\n# Examples\nSee `DynamicCollection::set_criterion`",9,null],[0,"criterion","fsort","This module contains different criteria for sorting files.",null,null],[3,"AccessDate","fsort::criterion","A criterion which sorts files by the dates of the last access to them.",null,null],[3,"CreationDate","","A criterion which sorts files by their dates of creation.\n# Examples",null,null],[3,"ModifyDate","","A criterion which sorts files by their last dates of modify.",null,null],[3,"FileName","","A criterion which sorts files by their names.",null,null],[3,"FileSize","","A criterion which sorts files by their size.",null,null],[4,"Error","","An error occurring during the creation of a criterion.",null,null],[13,"NoAccess","","It was not possible to access file behind the path.",10,null],[13,"InvalidPath","","The path is not a file but a directory, device or other unsupported handle.",10,null],[13,"CriterionUnsupported","","The requested search criterion is not supported on this OS.",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"description","","",10,null],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"fmt","","",11,null],[11,"from_path","","",11,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from","std::time","",12,{"inputs":[{"name":"accessdate"}],"output":{"name":"self"}}],[11,"cmp","fsort::criterion","",13,null],[11,"partial_cmp","","",13,null],[11,"lt","","",13,null],[11,"le","","",13,null],[11,"gt","","",13,null],[11,"ge","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"fmt","","",13,null],[11,"from_path","","",13,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from","std::time","",12,{"inputs":[{"name":"creationdate"}],"output":{"name":"self"}}],[11,"cmp","fsort::criterion","",14,null],[11,"partial_cmp","","",14,null],[11,"lt","","",14,null],[11,"le","","",14,null],[11,"gt","","",14,null],[11,"ge","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"from_path","","",14,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from","std::time","",12,{"inputs":[{"name":"modifydate"}],"output":{"name":"self"}}],[11,"cmp","fsort::criterion","",15,null],[11,"partial_cmp","","",15,null],[11,"lt","","",15,null],[11,"le","","",15,null],[11,"gt","","",15,null],[11,"ge","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"fmt","","",15,null],[11,"from_path","","",15,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from","std::ffi::os_str","",16,{"inputs":[{"name":"filename"}],"output":{"name":"self"}}],[11,"cmp","fsort::criterion","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"from_path","","",17,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[8,"Criterion","","A trait for objects which are valid sorting criteria for files.",null,null],[10,"from_path","","Reads a specific criterion from a file.",18,{"inputs":[{"name":"p"}],"output":{"name":"result"}}]],"paths":[[3,"File"],[4,"Order"],[3,"PathBuf"],[4,"ErrorBehavior"],[4,"Result"],[3,"DynamicCollection"],[3,"StaticCollection"],[3,"PathIter"],[3,"FileIter"],[8,"FileCollection"],[4,"Error"],[3,"AccessDate"],[3,"SystemTime"],[3,"CreationDate"],[3,"ModifyDate"],[3,"FileName"],[3,"OsString"],[3,"FileSize"],[8,"Criterion"]]};
initSearch(searchIndex);
